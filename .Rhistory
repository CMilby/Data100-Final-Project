str(teens)
teens <- read.csv("snsdata.csv")
str(teens)
table(teens$gender)
table(teens$gender, useNA = "ifany")
summary(teens$age)
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
summary(teens$age)
interests <- teens[5:40]
interests <- teens[5:40]
interests
interests_z <- as.data.frame(lapply(interests, scale))
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
teen_clusters$size
teens <- read.csv("snsdata.csv")
str(teens)
table(teens$gender)
table(teens$gender, useNA = "ifany")
summary(teens$age)
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
summary(teens$age)
teens$female <- ifelse(teens$gender == "F" & !is.na(teens$gender), 1, 0)
teens$no_gender <- ifelse(is.na(teens$gender), 1, 0)
table(teens$gender, useNA = "ifany")
table(teens$female, useNA = "ifany")
table(teens$no_gender, useNA = "ifany")
mean(teens$age)
mean(teens$age, na.rm = TRUE)
aggregate(data = teens, age ~ gradyear, mean, na.rm = TRUE)
ave_age <- ave(teens$age, teens$gradyear, FUN = function(x) mean(x, na.rm = TRUE))
teens$age <- ifelse(is.na(teens$age), ave_age, teens$age)
summary(teens$age)
interests <- teens[5:40]
interests
interests_z <- as.data.frame(lapply(interests, scale))
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
teen_clusters$size
teen_clusters$centers
teens$cluster <- teen_clusters$cluster
teens[1:5, c("cluster", "gender", "age", "friends")]
teens[1:5, c("cluster", "gender", "age", "friends")]
aggregate(data = teens, age ~ cluster, mean)
aggregate(data = teens, female ~ cluster, mean)
aggregate(data = teens, friends ~ cluster, mean)
interests_z <- as.data.frame(lapply(interests, scale))
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
teen_clusters$size
teen_clusters$centers
teens$cluster <- teen_clusters$cluster
teens[1:5, c("cluster", "gender", "age", "friends")]
aggregate(data = teens, age ~ cluster, mean)
aggregate(data = teens, female ~ cluster, mean)
aggregate(data = teens, friends ~ cluster, mean)
dim(teens)
head(teens)
head(teens)
table(teens$gender, useNA = "ifany")
ave_age <- ave(teens$age, teens$gradyear, FUN = function(x) mean(x, na.rm = TRUE))
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
#Read the data and compute clusters.
teens <- read.csv("snsdata.csv")
#Fix the age column.  Replace Non-teen ages  with NA, then replace NA with gradyear mean
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
ave_age <- ave(teens$age, teens$gradyear, FUN = function(x) mean(x, na.rm = TRUE))
teens$age <- ifelse(is.na(teens$age), ave_age, teens$age)
#scale the interests
interests <- teens[5:40]
interests_z <- as.data.frame(lapply(interests, scale))
#compute 5 clusters
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
#add cluster as a column
teens$cluster <- teen_clusters$cluster
#compute mean age per cluster
meanAge<- as.data.frame(aggregate(data = teens, age ~ cluster, mean))
meanAge
#Read the data and compute clusters.
teens <- read.csv("snsdata.csv")
#Fix the age column.  Replace Non-teen ages  with NA, then replace NA with gradyear mean
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
ave_age <- ave(teens$age, teens$gradyear, FUN = function(x) mean(x, na.rm = TRUE))
teens$age <- ifelse(is.na(teens$age), ave_age, teens$age)
#scale the interests
interests <- teens[5:40]
interests_z <- as.data.frame(lapply(interests, scale))
#compute 5 clusters
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
#add cluster as a column
teens$cluster <- teen_clusters$cluster
#compute mean age per cluster
meanAge<- aggregate(data = teens, age ~ cluster, mean)
meanAge
#Read the data and compute clusters.
teens <- read.csv("snsdata.csv")
#Fix the age column.  Replace Non-teen ages  with NA, then replace NA with gradyear mean
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
ave_age <- ave(teens$age, teens$gradyear, FUN = function(x) mean(x, na.rm = TRUE))
teens$age <- ifelse(is.na(teens$age), ave_age, teens$age)
#scale the interests
interests <- teens[5:40]
interests_z <- as.data.frame(lapply(interests, scale))
#compute 5 clusters
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
#add cluster as a column
teens$cluster <- teen_clusters$cluster
#compute mean age per cluster
meanAge<- aggregate(data = teens, age ~ cluster, mean)
meanAge$age
#Read the data and compute clusters.
teens <- read.csv("snsdata.csv")
#Fix the age column.  Replace Non-teen ages  with NA, then replace NA with gradyear mean
teens$age <- ifelse(teens$age >= 13 & teens$age < 20, teens$age, NA)
ave_age <- ave(teens$age, teens$gradyear, FUN = function(x) mean(x, na.rm = TRUE))
teens$age <- ifelse(is.na(teens$age), ave_age, teens$age)
#scale the interests
interests <- teens[5:40]
interests_z <- as.data.frame(lapply(interests, scale))
#compute 5 clusters
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
#add cluster as a column
teens$cluster <- teen_clusters$cluster
#compute mean age per cluster
meanAge<- aggregate(data = teens, age ~ cluster, mean)
subset(meanAge,select=age)
sliderInput("clusterNum", "Cluster#",1, min=1, max=5, step = 1)
renderText({
paste("Cluster# ", input$clusterNum, " consists of " , teen_clusters$size[input$clusterNum],
" students" )
})
renderTable({
clusterNums<-c(1:5)
currentInterest<-subset(teen_clusters$centers,select=input$interest)
interestLevel <- ifelse(currentInterest >0 , "above average", "below average")
resultTable <- data.frame(clusterNums, teen_clusters$size,  currentInterest, interestLevel)
colnames(resultTable) <- c("Cluster", "Size", input$interest, "interest level")
#sort in descending order (minus sign) by size
#orderSize<- order(-teen_clusters$size)
#resultTable<-resultTable[orderSize,]
orderInterest<- order(-currentInterest)
resultTable<- resultTable[,-2]
resultTable<-resultTable[orderInterest,]
resultTable
})
renderTable({
clusterInterests <- teen_clusters$centers[input$clusterNum,]
interestOrder <- order(-clusterInterests)
#names(clusterInterests[interestOrder])[1:10]
as.data.frame(clusterInterests[interestOrder])
})
#Read the data and compute clusters.
teens <- read.csv("snsdata.csv")
#scale the interests
interests <- teens[5:40]
interests_z <- as.data.frame(lapply(interests, scale))
#compute 5 clusters
set.seed(2345)
teen_clusters <- kmeans(interests_z, 5)
#add cluster as a column
teens$cluster <- teen_clusters$cluster
clusterNums<-c(1:5)
lapply( teen_clusters, mean )
lapply( teen_clusters, mean )
lapply( teen_clusters, mean )
View(interests_z)
View(teen_clusters)
lapply( teen_clusters$size, scale )
teen_clusters$cluster
teen_clusters$center
teen_clusters$centers
teen_clusters [ teen_clusters$clusters == "football", ]$centers
teen_clusters [ teen_clusters$centers == "football", ]$centers
teen_clusters [ teen_clusters$centers == "football" ]$centers
teen_clusters [ teen_clusters$centers == "football" ]
teen_clusters [ teen_clusters$centers == "football" ]
teen_clusters [ teen_clusters$centers == "drugs" ]
teen_clusters [ teen_clusters$center == "drugs" ]
teen_clusters [ teen_clusters$center == "football" ]
teen_clusters [ teen_clusters$center == "football" ]
teen_clusters$centers
teen_clusters$centers [ teen_clusters$centers == "football" ]
teen_clusters$centers [ "football" ]
teen_clusters$centers [ 0 ]
teen_clusters$centers [ 1 ]
teen_clusters$centers [ 2 ]
teen_clusters$centers [ 2, 2 ]
teen_clusters$centers [ 2, "football" ]
resultTable <- data.frame(clusterNums, teen_clusters$size, teen_clusters$centers [ c ( 1: 5 ), "football" ] )
View(teen_clusters)
teens_cluster$size[ 1 ]
teens_clusters$size[ 1 ]
teen_clusters$size[ 1 ]
View(interests)
colnames ( interests )[ 1 ]
# resultTable <- resultTable [ order (  ) ]
resultTable
sliderInput ( "numClusts", "Cluster#", 1, 5, 5, step = 1 )
renderText ( {
paste ( "Cluster ", input$numClusts, " consists of ", teen_clusters$size[ input$numClusts ], " studnets\n" )
})
# radioButtons("interestsRB", "interests", choices = c ( "football", "shopping", "drugs", "band", "god"), inline = TRUE)
renderTable({
# intNames <- c ( "basketball", "football", "soccer", "softball", "volleyball" )
resultTable <- data.frame( colnames ( interests ), teen_clusters$centers [ input$numClusts, ] )
colnames ( resultTable ) <- c ( "interests", "centers" )
# resultTable <- resultTable [ order (  ) ]
resultTable
# centers <- teen_clusters$centers [ c ( 1: 5 ), input$interestsRB ]
# intLevel <- ifelse ( centers >= 0.0, "above average", "below average" )
# resultTable <- data.frame(clusterNums, teen_clusters$size, centers, intLevel )
# colnames(resultTable) <- c("cluster", "size", input$interestsRB, "interest level" )
# resultTable <- resultTable [ order ( -centers ), ]
# resultTable
})
resultTable <- data.frame( colnames ( interests ), teen_clusters$centers [ input$numClusts, ] )
colnames ( resultTable ) <- c ( "interests", "centers" )
renderTable({
# intNames <- c ( "basketball", "football", "soccer", "softball", "volleyball" )
resultTable <- data.frame( colnames ( interests ), teen_clusters$centers [ input$numClusts, ] )
colnames ( resultTable ) <- c ( "interests", "centers" )
resultTable <- resultTable [ order ( resultTable [ , 1 ] ) ]
resultTable
# centers <- teen_clusters$centers [ c ( 1: 5 ), input$interestsRB ]
# intLevel <- ifelse ( centers >= 0.0, "above average", "below average" )
# resultTable <- data.frame(clusterNums, teen_clusters$size, centers, intLevel )
# colnames(resultTable) <- c("cluster", "size", input$interestsRB, "interest level" )
# resultTable <- resultTable [ order ( -centers ), ]
# resultTable
})
# resultTable <- resultTable [ order ( resultTable [ , 1 ] ) ]
resultTable
View(resultTable)
resultTable [ order ( resultTable [ , 1 ] ) ]
resultTable [ order ( resultTable [ , 1 ] ), ]
